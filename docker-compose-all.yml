services:
  db:
    image: postgres
    environment:
      POSTGRES_PASSWORD: Password!23
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      - dapr

  datadog:
    image: gcr.io/datadoghq/agent:latest
    pid: host
    ports:
      - 8125:8125
      - 8126:8126
      - 4317:4317
      - 4318:4318
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_ENV=dev
      - DD_VERSION=latest
      - DD_SITE=datadoghq.eu
      - DD_APM_NON_LOCAL_TRAFFIC=true
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
      - DD_OTLP_CONFIG_RECEIVER_PROTOCOLS_GRPC_ENDPOINT=0.0.0.0:4317
      - DD_TRACE_OTEL_ENABLED=true
      - DD_LOGS_ENABLED=true
      - DD_OTLP_CONFIG_LOGS_ENABLED=true
      - DD_API_ENABLED=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
    networks:
      - dapr

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - dapr

  orders:
    build:
      ./src/Dapr.Order.Api
    ports:
      - "50001:50001"
      - "3500:3500"
      - "8080:8080"
    environment:
      - OrdersDbConnectionString=Host=db;Database=orders;Username=postgres;Password=Password!23;
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://datadog:4317
      - MOMENTO_API_KEY=${MOMENTO_API_KEY}
      - DAPR_HOST=host.docker.internal
      - DAPR_GRPC_PORT=50001
    depends_on:
      db:
        condition: service_healthy
    networks:
      - dapr
  order-api-dapr:
    image: "daprio/daprd:edge"
    command: [
      "./daprd",
     "--app-id", "orders",
     "--app-port", "8080",
     "--placement-host-address", "placement:50006",
     "--dapr-http-port", "3500",
     "--dapr-grpc-port", "50001",
     "--resources-path", "./components"
     ]
    volumes:
        - "./components/:/components"
    depends_on:
      - orders
    network_mode: "service:orders"

  payments:
    image: hashicorp/consul:latest
    build:
      ./src/Dapr.PaymentProcessor
    ports:
      - "50002:50002"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://datadog:4317
    depends_on:
      - placement
    networks:
      - dapr
  payments-dapr:
    image: "daprio/daprd:edge"
    command: [
      "./daprd",
     "--app-id", "payments",
     "--app-port", "8080",
     "--placement-host-address", "placement:50006",
     "--dapr-grpc-port", "50002",
     "--resources-path", "./components"
     ]
    volumes:
        - "./components/:/components"
    depends_on:
      - payments
    network_mode: "service:payments"

  placement:
    image: "daprio/dapr"
    command: ["./placement", "--port", "50006"]
    ports:
      - "50010:50010"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-volume:/bitnami"
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
      ZOOKEEPER_CLIENT_PORT: 2181
    
  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    volumes:
      - "kafka-volume:/bitnami"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

volumes:
  kafka-volume:
  zookeeper-volume:
  
networks:
  dapr: null