version: "3.7"
services:
  db:
    image: postgres
    environment:
      POSTGRES_PASSWORD: Password!23
    ports: 
      - 5432:5432

  datadog:
    image: gcr.io/datadoghq/agent:latest
    pid: host
    ports:
      - 8125:8125
      - 8126:8126
      - 4317:4317
      - 4318:4318
    environment:
     - DD_API_KEY=${DD_API_KEY}
     - DD_ENV=dev
     - DD_VERSION=latest
     - DD_SITE=datadoghq.eu
     - DD_APM_NON_LOCAL_TRAFFIC=true
     - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
     - DD_OTLP_CONFIG_RECEIVER_PROTOCOLS_GRPC_ENDPOINT=0.0.0.0:4317
     - DD_TRACE_OTEL_ENABLED=true
     - DD_LOGS_ENABLED=true
     - DD_OTLP_CONFIG_LOGS_ENABLED=true
     - DD_API_ENABLED=true
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock
     - /proc/:/host/proc/:ro
     - /sys/fs/cgroup:/host/sys/fs/cgroup:ro

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"

  warp:
      image: public.ecr.aws/warpstream-labs/warpstream_agent:latest
      command:
        - playground
      environment:
        # this is a no-op as it will default on the custom advertised hostname defined above, but you can change this if you want to use a different hostname with Kafka
        - WARPSTREAM_DISCOVERY_KAFKA_HOSTNAME_OVERRIDE=warp
        - WARPSTREAM_CURRENT_VIRTUAL_CLUSTER_ID=dapr
        - WARPSTREAM_CURRENT_RSM_ID=dapr
      healthcheck:
        # Wait for the Agent to finish setting up the demo before marking it as healthy
        # to delay the diagnose-connection command from running for a few seconds.
        test: ["CMD", "sh", "-c", "sleep 10"]
        interval: 5s
        timeout: 15s
        retries: 5
      ports:
        - "9092:9092"


  warp-diagnose:
      image: public.ecr.aws/warpstream-labs/warpstream_agent:latest
      command:
        - kcmd
        - -bootstrap-host
        - warp
        - -type
        - diagnose-connection
      depends_on:
        warp:
          condition: service_healthy